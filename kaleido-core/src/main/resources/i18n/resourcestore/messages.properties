# generic io exception
store.resource.ioe=Unexpected store IOException: "{0}"
# resource not found exception
store.resource.notfound=The resource "{0}" can''t be found in the store
# inputstream error
store.resource.inputstream.error=Can't release resource due to following IOException error "{0}"

# resource uri not managed by resourceStore
store.resource.uri.notmanaged=The scheme "{0}" of the uri "{1}" is not managed by resource store implementations. You can registered your own scheme using "ResourceStoreTypeEnum.registerCustomScheme("...")"
store.resource.uri.custom.notmanaged=The scheme "{0}" of the uri "{1}" is not managed by resource store implementations. Check that class custom ResourceStore implementation is right annotated with @org.kaleidofoundry.core.plugin.Declare("...")  
store.resource.uri.illegal=The resource uri "{0}" is not allow for this type store "{0}"
store.resource.uri.http.illegal="{0}" is not an http:// or https:// valid URI. No host is specified...
store.resource.uri.ftp.illegal="{0}" is not an ftp:// valid URI. No host is specified...
store.resource.uri.malformed=The resource uri "{0}" is malformed

# resource store is defined as readonly
store.resource.readonly.illegal=The resource store "{0}" is defined for read only use.
# resource uri can be removed
store.resource.remove.illegal=The resource uri "{0}" can''t be removed
# resource uri directory can't be removed
store.resource.remove.directory=The resource uri "{0}" is a directory. It can be removed.
# custom resource store jpa entity can't be found
store.context.customentity.notfound=resource store context "{0}" contains an illegal class name "{1}" in argument "{2}"
store.context.customentity.illegaltype=resource store context "{0}" contains an illegal class type "{1}" in argument "{2}" -> The given class, does not extends ResourceStoreEntity.
store.context.customentity.illegalconstructor=default class constructor can''t be found in class "{0}"  : {1}
store.context.customentity.cantcreate=error in class constructor "{0}" : {1}


# application base directory information
store.basedir.info=Setting [kaleido.basedir] to [{0}]

# generic io exception
store.connection.error=Connection error resource [{0}]. Please check nested exception.
store.unexpeceted.ioe=Unexpected IO error on resource [{0}]. Please check nested exception.

# failover messages
store.failover.retry.get.info=Failover processing while getting the resource [{0}] - Sleeping for {1}ms then retry {2}/{3}...   
store.failover.retry.store.info=Failover processing during storage of the resource [{0}] - Sleeping for {1}ms then retry {2}/{3}...   
store.failover.retry.remove.info=Failover processing while removing the resource [{0}] - Sleeping for {1}ms then retry {2}/{3}...
store.failover.retry.error=Retry processing failed due to Thread.sleep({0}) exception

# resource not found exception
store.resource.notfound="{0}"
# inputstream error
store.inputstream.close.error=Can''t release resource due to following IOException error "{0}"

# resource uri not managed by the file store
store.uri.notmanaged=The scheme "{0}" of the uri [{1}] is not managed by file store implementations. You can registered your own scheme using "FileTypeEnum.registerCustomScheme("...")"
store.uri.custom.notmanaged=The scheme [{0}] of the uri [{1}] is not managed by file store implementations. Check that class custom FileStore implementation is right annotated with @org.kaleidofoundry.core.plugin.Declare("...")  
store.uri.illegal=The resource uri [{0}] is not allowed for this type store [{0}]
store.uri.http.illegal=The resource uri [{0}] is not an http:// or https:// valid URI. No host is specified...
store.uri.ftp.illegal=The resource uri [{0}] is not an ftp:// valid URI. No host is specified...
store.uri.malformed=The resource uri [{0}] is malformed

# file store is defined as readonly in its runtime context
store.readonly.illegal=The file store [{0}] is defined for read only use.
# resource uri can be removed
store.remove.illegal=The resource uri [{0}] can''t be removed
# resource uri directory can't be removed
store.remove.directory=The resource uri [{0}] is a directory. It can be removed.

# custom file store jpa entity can't be found
store.context.customentity.notfound=file store context [{0}] contains an illegal class name [{1}] in argument [{2}]
store.context.customentity.illegaltype=file store context [{0}] contains an illegal class type [{1}] in argument [{2}] -> The given class, does not extends FileHandlerEntity.
store.context.customentity.illegalconstructor=default class constructor can''t be found in class [{0}]  : {1}
store.context.customentity.cantcreate=error in class constructor [{0}] : {1}


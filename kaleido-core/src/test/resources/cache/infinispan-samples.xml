<?xml version="1.0" encoding="UTF-8"?>

<infinispan xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:infinispan:config:4.0">

   <!-- *************************** -->
   <!-- System-wide global settings -->
   <!-- *************************** -->

   <global>

      <!-- Note that if these are left blank, defaults are used.  See the user guide for what these defaults are 
      <asyncListenerExecutor factory="org.infinispan.executors.DefaultExecutorFactory">
         <property name="maxThreads" value="5"/>
         <property name="threadNamePrefix" value="AsyncListenerThread"/>
      </asyncListenerExecutor>

      <asyncTransportExecutor factory="org.infinispan.executors.DefaultExecutorFactory">
         <property name="maxThreads" value="25"/>
         <property name="threadNamePrefix" value="AsyncSerializationThread"/>
      </asyncTransportExecutor>

      <evictionScheduledExecutor factory="org.infinispan.executors.DefaultScheduledExecutorFactory">
         <property name="threadNamePrefix" value="EvictionThread"/>
      </evictionScheduledExecutor>

      <replicationQueueScheduledExecutor factory="org.infinispan.executors.DefaultScheduledExecutorFactory">
         <property name="threadNamePrefix" value="ReplicationQueueThread"/>
      </replicationQueueScheduledExecutor>

      <globalJmxStatistics enabled="true" jmxDomain="infinispan"/>-->

      <!--
         If the transport is omitted, there is no way to create distributed or clustered caches.
         There is no added cost to defining a transport but not creating a cache that uses one, since the transport
         is created and initialized lazily.
      -->
      <transport transportClass="org.infinispan.remoting.transport.jgroups.JGroupsTransport"
                 clusterName="infinispan-cluster"
                 distributedSyncTimeout="50000">
         <!-- Note that the JGroups transport uses sensible defaults if no configuration property is defined. -->
         <property name="configurationFile" value="udp.xml"/>
         <!-- See the JGroupsTransport javadocs for more flags -->
      </transport>

      <!-- Again, sensible defaults are used here if this is omitted.  -->
      <serialization marshallerClass="org.infinispan.marshall.VersionAwareMarshaller" version="1.0"/>

      <!--
         Used to register JVM shutdown hooks.
         hookBehavior: DEFAULT, REGISTER, DONT_REGISTER
      -->
      <shutdown hookBehavior="DEFAULT"/>
   </global>

   <!-- ************************************** -->
   <!-- Individually configured "named" caches -->
   <!-- ************************************** -->

	<namedCache name="Local"/>
	
   	<namedCache name="LocalTX">
		<transaction transactionManagerLookupClass="org.infinispan.transaction.lookup.DummyTransactionManagerLookup"/>
	</namedCache>
	
	<namedCache name="CacheStore">
		<loaders passivation="false" shared="false" preload="true">
		   <loader class="org.infinispan.loaders.file.FileCacheStore" fetchPersistentState="true"
		           ignoreModifications="false" purgeOnStartup="false">
		      <properties>
		         <property name="location" value="/tmp"/>
		      </properties>
		   </loader>
		</loaders>
   	</namedCache>

   <namedCache name="Eviction">
      <eviction wakeUpInterval="500" maxEntries="2" strategy="FIFO"/>
   </namedCache>
   <namedCache name="CacheStoreEviction">
		<loaders passivation="false" shared="false" preload="true">
		   <loader class="org.infinispan.loaders.file.FileCacheStore" fetchPersistentState="true"
		           ignoreModifications="false" purgeOnStartup="false">
		      <properties>
		         <property name="location" value="/tmp"/>
		      </properties>
		   </loader>
		</loaders>
      <eviction wakeUpInterval="500" maxEntries="2" strategy="FIFO"/>
   </namedCache>
   <namedCache name="ReplicatedTX">
  	  <clustering mode="replication">
         <sync replTimeout="20000"/>
      </clustering>
   </namedCache>
</infinispan>